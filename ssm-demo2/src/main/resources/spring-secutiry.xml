<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <!--Spring-Security配置文件-->
    <!--1.配置不过滤的资源以及登录相关的操作-->
    <security:http security="none" pattern="/js/**"/>
    <security:http security="none" pattern="/layui/**"/>
    <security:http security="none" pattern="/login.jsp"/>
    <security:http security="none" pattern="/failure.jsp"/>
    <security:http security="none" pattern="/index.jsp"/>

    <!--2.开启SpringSecurity的自动配置 -->
    <security:http auto-config="true" use-expressions="false">
        <!--1.1. 配置拦截路劲及可以访问的角色-->
        <security:intercept-url pattern="/**" access="ROLE_ADMIN,ROLE_USER"/>
        <!--1.2. 配置登录页面,登录页面是login-page="/login.jsp" ，登录之后进行验证处理的url login-processing-url="/login.do"
               设置参数名称 username-parameter="username"，登录失败跳转的页面：authentication-failure-url="/failure.jsp"
               登录成功默认跳转的页面：default-target-url="/index.jsp"
        -->
        <security:form-login login-page="/login.jsp"
                             login-processing-url="/login.do"
                             username-parameter="username"
                             password-parameter="password"
                             default-target-url="/index.jsp"
                             authentication-failure-url="/failure.jsp"/>
        <!--1.2. 配置退出操作，退出处理的url:logout-url="/logout.do",退出之后是够删除session:invalidate-session="true"
                  退出成功之后跳转的页面：logout-success-url="/index.jsp"
       -->
        <security:logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/index.jsp"/>
        <!--1.3 关闭CSRF,这个功能不太清楚-->
        <security:csrf disabled="true"/>
    </security:http>
    <!--3.认证管理方式：使用我们自己的数据库数据-->
    <security:authentication-manager>
        <!--userService必须返回的是User对象（SpringSecurity提供的）-->
        <security:authentication-provider user-service-ref="userService">
            <!--配置密码加密的方式-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder"/>
    <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"
          id="webSecurityExpressionHandler"/>
</beans>